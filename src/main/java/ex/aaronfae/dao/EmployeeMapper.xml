<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ex.aaronfae.dao.EmployeeMapper">
    <resultMap id="selectAllMap" type="ex.aaronfae.entity.Employee">
        <id column="e_id" jdbcType="INTEGER" property="eId"/>
        <result column="e_name" jdbcType="VARCHAR" property="eName"/>
        <result column="e_gender" jdbcType="VARCHAR" property="eGender"/>
        <result column="e_email" jdbcType="VARCHAR" property="eEmail"/>
        <result column="e_tel" jdbcType="VARCHAR" property="eTel"/>
        <result column="d_id" jdbcType="INTEGER" property="dId"/>
        <result column="d_name" jdbcType="VARCHAR" property="dName"/>
    </resultMap>
    <select id="selectAllEmployee" resultMap="selectAllMap">
        SELECT * FROM department d LEFT JOIN employee e ON d.d_id = e.d_id
    </select>

    <resultMap id="BaseResultMap" type="ex.aaronfae.entity.Employee">
        <id column="e_id" jdbcType="INTEGER" property="eId"/>
        <result column="e_name" jdbcType="VARCHAR" property="eName"/>
        <result column="e_gender" jdbcType="VARCHAR" property="eGender"/>
        <result column="e_email" jdbcType="VARCHAR" property="eEmail"/>
        <result column="e_tel" jdbcType="VARCHAR" property="eTel"/>
        <result column="d_id" jdbcType="INTEGER" property="dId"/>
        <result column="d_name" jdbcType="VARCHAR" property="dName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    e_id, e_name, e_gender, e_email, e_tel, d_id
  </sql>
    <select id="selectByExample" parameterType="ex.aaronfae.entity.EmployeeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--select-->
        <!--<include refid="Base_Column_List"/>-->
        <!--from employee-->
        <!--where e_id = #{eId,jdbcType=INTEGER}-->
        SELECT * FROM department d ,employee e where e_id = 1 AND d.d_id = #{eId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where e_id = #{eId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="ex.aaronfae.entity.EmployeeExample">
        delete from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="ex.aaronfae.entity.Employee">
    insert into employee (e_id, e_name, e_gender, 
      e_email, e_tel, d_id)
    values (#{eId,jdbcType=INTEGER}, #{eName,jdbcType=VARCHAR}, #{eGender,jdbcType=VARCHAR}, 
      #{eEmail,jdbcType=VARCHAR}, #{eTel,jdbcType=VARCHAR}, #{dId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="ex.aaronfae.entity.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eId != null">
                e_id,
            </if>
            <if test="eName != null">
                e_name,
            </if>
            <if test="eGender != null">
                e_gender,
            </if>
            <if test="eEmail != null">
                e_email,
            </if>
            <if test="eTel != null">
                e_tel,
            </if>
            <if test="dId != null">
                d_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eId != null">
                #{eId,jdbcType=INTEGER},
            </if>
            <if test="eName != null">
                #{eName,jdbcType=VARCHAR},
            </if>
            <if test="eGender != null">
                #{eGender,jdbcType=VARCHAR},
            </if>
            <if test="eEmail != null">
                #{eEmail,jdbcType=VARCHAR},
            </if>
            <if test="eTel != null">
                #{eTel,jdbcType=VARCHAR},
            </if>
            <if test="dId != null">
                #{dId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="ex.aaronfae.entity.EmployeeExample" resultType="java.lang.Long">
        select count(*) from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update employee
        <set>
            <if test="record.eId != null">
                e_id = #{record.eId,jdbcType=INTEGER},
            </if>
            <if test="record.eName != null">
                e_name = #{record.eName,jdbcType=VARCHAR},
            </if>
            <if test="record.eGender != null">
                e_gender = #{record.eGender,jdbcType=VARCHAR},
            </if>
            <if test="record.eEmail != null">
                e_email = #{record.eEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.eTel != null">
                e_tel = #{record.eTel,jdbcType=VARCHAR},
            </if>
            <if test="record.dId != null">
                d_id = #{record.dId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update employee
        set e_id = #{record.eId,jdbcType=INTEGER},
        e_name = #{record.eName,jdbcType=VARCHAR},
        e_gender = #{record.eGender,jdbcType=VARCHAR},
        e_email = #{record.eEmail,jdbcType=VARCHAR},
        e_tel = #{record.eTel,jdbcType=VARCHAR},
        d_id = #{record.dId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="ex.aaronfae.entity.Employee">
        update employee
        <set>
            <if test="eName != null">
                e_name = #{eName,jdbcType=VARCHAR},
            </if>
            <if test="eGender != null">
                e_gender = #{eGender,jdbcType=VARCHAR},
            </if>
            <if test="eEmail != null">
                e_email = #{eEmail,jdbcType=VARCHAR},
            </if>
            <if test="eTel != null">
                e_tel = #{eTel,jdbcType=VARCHAR},
            </if>
            <if test="dId != null">
                d_id = #{dId,jdbcType=INTEGER},
            </if>
        </set>
        where e_id = #{eId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="ex.aaronfae.entity.Employee">
    update employee
    set e_name = #{eName,jdbcType=VARCHAR},
      e_gender = #{eGender,jdbcType=VARCHAR},
      e_email = #{eEmail,jdbcType=VARCHAR},
      e_tel = #{eTel,jdbcType=VARCHAR},
      d_id = #{dId,jdbcType=INTEGER}
    where e_id = #{eId,jdbcType=INTEGER}
  </update>
</mapper>